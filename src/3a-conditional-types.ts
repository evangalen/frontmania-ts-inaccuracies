type _ = never;
//   ^?

interface Animal {
  live(): void;
}
interface Dog extends Animal {
  woof(): void;
}

// âœ‚â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´â•´
// ðŸ º never type
(() => {
  type _ = never;
  //   ^?
})(); // ðŸ ¼
// ðŸ º conditional type
(() => {
  type _ = Dog extends Animal ? true : false;
  //   ^?
})(); // ðŸ ¼
